#
# Copyright 2017 weaknespase
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Data types configuration file for Tokyo Xanadu (PSVita version)
# <record_type>: <field1>[,<fieldN>]
# Use combination of 'b', 'i', 'u', 'f', 'c' and number to specify field type.
#   b for byte array
#   i for signed integer
#   u for unsigned integer
#   f for IEEE floating point number
#   c for zero-terminated utf8 string
# Length specified in bytes. * means arbitrary amount of bytes, usable only with 'b'.
# Length field for strings ignored as they are zero-terminated.
#
# If not configured, payload for record assumed to come in format of variable-length byte array.
# <Have fun hacking!>
bgm: c0, u2
ActiveVoiceTableData: u2, u2, u2, c0, u4, c0, f4, f4, b8
QSChapter: u2, c0, u2
QSBook: u2, u2, c0, c0, c0, b6
QSMaxPoint: b*
QSTitle: u2, u1, c0, c0, u4, b*
QSText: u2, u1, c0, b*
QSRank: u2, u2, c0, u2
DungeonData: u2, u2, u1, c0, u1, c0, c0, c0, c0, c0, u2, c0, c0, c0, c0, c0, c0, f4, u2, u2, u2, u2, u2, u2, c0, c0, c0, c0
hkitugi_lst: u2, u2, u2, c0, c0
item: u2, i2, c0, b62, c0, c0, b*
item_q: u2, i2, c0, b62, c0, c0, b*
ItemHelpData: u2, c0, b*
CompHelpData: u2, b*
MapJumpData: u2, u2, c0, u2, u4, c0, c0, b8, c0
TextTableData: u2, c0
PlaceTableData: u2, u2, c0, c0, b*
GridLvData: b*
QSStage: u2, u2, c0, u2
QSMons: c0, b*
QSHelp: u2, u2, c0, c0
QSCook: c0, b*
QSCoolVoice: b*
QSCookRate: u4
QSChar: u2, u4, c0, u1, c0, c0, c0, c0, c0, c0, c0, c0, c0, c0, c0
NaviTextData: u2, c0, b*
NameTableData: u2, c0, c0, c0, c0, c0, c0, c0, b*
status: c0, c0, c0, c0, b154, c0, c0
char_revise: c0, b*
LinkAbList: b*
LinkAbText: u1, c0, c0
LinkLevelExp: b*
magic: b57, c0, c0, c0

SMG01HelpMessage: u4, c0

#Alice Punch minigame data
SMG02HelpMessage: u4, c0
SMG02TableDifficulty: b*
SMG02TableData: b*

#Fishing minigame data
#v18: uint32       try_cost
#v19: float[4]     t0_change_percent   percent change between tiers when 0th tier fish caught
#v23: float[4]     t0_change_percent   percent change between tiers when 1st tier fish caught
#v27: float[4]     t0_change_percent   percent change between tiers when 2nd tier fish caught
#v31: float[25]    base_percent        base percent per fish type
SMG03FishPoint: u4, c0, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, u4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, c0, c0
SMG03FishPointSetting: u4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, f4, u4, u4, c0
#v00: uint32 fish_id                id of fish, also used as index in base percent table
#v07: reward amount in medals
SMG03Fish: u4, c0, u4, u4, f4, f4, f4, u4, u4, f4, f4, f4, u4, f4, u4, f4, u4, f4, u4, f4, u4, f4, b*